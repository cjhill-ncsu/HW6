[
  {
    "objectID": "HW6.html",
    "href": "HW6.html",
    "title": "HW6",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\nlapply() is a Base R function that takes a list and applies a given function to every element of that list. It then returns a list of equal size.\nThe purrr package has an equivalent map() function. I am familiar with Scala, and so this is more to my liking, personally. Particularly the type checking extensions.\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want to use lapply() to run the code cor(numeric_matrix, method = \"kendall\") on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = \"kendall\" when calling lapply())\n\nThe arguments to cor() are not fed into cor() itself, but are instead provided as additional arguments to lappy()\n\n\n\nresult &lt;- lapply(my_list, cor, method = \"kendall\")\n\n\nWhat are two advantages of using purrr functions instead of the Base R apply family?\n\nThe first argument to all map functions is always the data. Thus it is “pipable”\nmap_*() allows us to specify the type of output. This provides us with type checking!\n\nWhat is a side-effect function?\n\nSide effect effect function doesn’t actually try to change the data. It just tries to produce something or alter the environment.\n\nWhy can you name a variable sd in a function and not cause any issues with the sd() function?\n\nLexical Scoping\nFunctions actually have temporary function environments."
  },
  {
    "objectID": "HW6.html#task-1---conceptual-questions",
    "href": "HW6.html#task-1---conceptual-questions",
    "title": "HW6",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\nlapply() is a Base R function that takes a list and applies a given function to every element of that list. It then returns a list of equal size.\nThe purrr package has an equivalent map() function. I am familiar with Scala, and so this is more to my liking, personally. Particularly the type checking extensions.\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want to use lapply() to run the code cor(numeric_matrix, method = \"kendall\") on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = \"kendall\" when calling lapply())\n\nThe arguments to cor() are not fed into cor() itself, but are instead provided as additional arguments to lappy()\n\n\n\nresult &lt;- lapply(my_list, cor, method = \"kendall\")\n\n\nWhat are two advantages of using purrr functions instead of the Base R apply family?\n\nThe first argument to all map functions is always the data. Thus it is “pipable”\nmap_*() allows us to specify the type of output. This provides us with type checking!\n\nWhat is a side-effect function?\n\nSide effect effect function doesn’t actually try to change the data. It just tries to produce something or alter the environment.\n\nWhy can you name a variable sd in a function and not cause any issues with the sd() function?\n\nLexical Scoping\nFunctions actually have temporary function environments."
  },
  {
    "objectID": "HW6.html#task-2---writing-r-functions",
    "href": "HW6.html#task-2---writing-r-functions",
    "title": "HW6",
    "section": "Task 2 - Writing R Functions",
    "text": "Task 2 - Writing R Functions\n\n1. Root Mean Square Error (RMSE)\n\ngetRMSE &lt;- function(actual, predicted, ...) {\n  sqrt(mean((actual - predicted)^2, ...))\n}\n\n\n\n2. Test getRMSE()\nSimulated Test Data\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\ngetRMSE(resp, pred)\n\n[1] 0.9581677\n\n\nInject an NA into the Test Data\n\nresp[c(5, 10)] &lt;- NA_real_\n\n\ngetRMSE(resp, pred)\n\n[1] NA\n\n\nUse additional arguments to remove NA\n\ngetRMSE(resp, pred, na.rm = TRUE)\n\n[1] 0.9655497\n\n\n\n\n3. Mean Absolute Error (MAE)\n\ngetMAE &lt;- function(actual, predicted, ...) {\n  mean(abs(actual - predicted), ...)\n}\n\n\n\n4. Test getMAE\n\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\ngetMAE(resp, pred)\n\n[1] 0.7852649\n\n\nInject an NA into the Test Data\n\nresp[c(5, 10)] &lt;- NA_real_\n\n\ngetMAE(resp, pred)\n\n[1] NA\n\n\nUse additional arguments to remove NA\n\ngetMAE(resp, pred, na.rm = TRUE)\n\n[1] 0.7793267\n\n\n\n\n5. Wrapper for RMSE and MAE\n\ngetMetrics &lt;- function(actual, predicted, metrics = c(\"RMSE\", \"MAE\"), ...) {\n\n  # Validate inputs\n  if (!is.atomic(actual) || !is.atomic(predicted)) {\n    stop(\"Both inputs must be atomic vectors.\")\n  }\n  \n  if (!is.numeric(actual) || !is.numeric(predicted)) {\n    stop(\"Both inputs must be numeric vectors.\")\n  }\n  \n  results &lt;- list()\n  \n  if (\"RMSE\" %in% metrics) {\n    results$RMSE &lt;- getRMSE(actual, predicted, ...)\n  }\n  \n  if (\"MAE\" %in% metrics) {\n    results$MAE &lt;- getMAE(actual, predicted, ...)\n  }\n  \n  return(results)\n}\n\n\n\n6. Test getMetrics()\n\nresp &lt;- 3 + 10 * x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\nTest using this data. Call it once asking for each metric individually and once specifying both metrics\n\ngetMetrics(resp, pred)\n\n$RMSE\n[1] 0.9976662\n\n$MAE\n[1] 0.7819805\n\n\n\ngetMetrics(resp, pred, metrics = \"RMSE\")\n\n$RMSE\n[1] 0.9976662\n\ngetMetrics(resp, pred, metrics = \"MAE\")\n\n$MAE\n[1] 0.7819805\n\n\nInject an NA into the Test Data\n\nresp[c(5, 10)] &lt;- NA_real_\n\nTest using this data. Call it once asking for each metric individually and once specifying both metrics\n\ngetMetrics(resp, pred)\n\n$RMSE\n[1] NA\n\n$MAE\n[1] NA\n\n\n\ngetMetrics(resp, pred, metrics = \"RMSE\")\n\n$RMSE\n[1] NA\n\ngetMetrics(resp, pred, metrics = \"MAE\")\n\n$MAE\n[1] NA\n\n\nTest function by passing it incorrect data\n\ngetMetrics(data.frame(resp), pred) |&gt; catch_error()\n\nCaught error: Both inputs must be atomic vectors."
  },
  {
    "objectID": "HW6.html#task-3---querying-an-api-and-a-tidy-style-function",
    "href": "HW6.html#task-3---querying-an-api-and-a-tidy-style-function",
    "title": "HW6",
    "section": "Task 3 - Querying an API and a Tidy-Style Function",
    "text": "Task 3 - Querying an API and a Tidy-Style Function\n\n1. Query API with GET()\n\napi_key &lt;- \"d9d2b8e6433e4e2d8364a4dfa5ea23cf\"\nbase_url &lt;- \"https://newsapi.org/v2/everything\"\n\nparams &lt;- list(\n  q = \"technology\",    \n  from = \"2024-10-01\",    \n  apiKey = api_key\n)\n\nresponse &lt;- GET(base_url, query = params)\nresponse\n\nResponse [https://newsapi.org/v2/everything?q=technology&from=2024-10-01&apiKey=d9d2b8e6433e4e2d8364a4dfa5ea23cf]\n  Date: 2024-10-14 23:31\n  Status: 200\n  Content-Type: application/json; charset=utf-8\n  Size: 75.4 kB\n\n\n\n\n2. Parse the response\n\nresponse_content &lt;- fromJSON(rawToChar(response$content), flatten = TRUE)\n\narticles &lt;- pluck(response_content, \"articles\")\n\narticles_df &lt;- as_tibble(articles)\narticles_df\n\n# A tibble: 100 × 9\n   author       title description url   urlToImage publishedAt content source.id\n   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;    \n 1 Gizmodo      Firs… Sending a … http… https://g… 2024-10-11… \"Robor… &lt;NA&gt;     \n 2 Gizmodo      From… Roborock's… http… https://g… 2024-10-02… \"Robor… &lt;NA&gt;     \n 3 Joe Tilleli  Unbe… No need to… http… https://g… 2024-10-07… \"Amazo… &lt;NA&gt;     \n 4 &lt;NA&gt;         Musk… BBC Tech C… http… https://i… 2024-10-12… \"Elon … &lt;NA&gt;     \n 5 Rob Reddick  Form… Since laun… http… https://m… 2024-10-02… \"What … wired    \n 6 Juli Clover  Appl… Apple toda… http… https://i… 2024-10-07… \"Apple… &lt;NA&gt;     \n 7 Verity Burns Nint… Nintendo’s… http… https://m… 2024-10-09… \"Of al… wired    \n 8 Seth Godin   Yes,… I worked w… http… https://s… 2024-10-05… \"I wor… &lt;NA&gt;     \n 9 Abigail Bas… Hond… Honda’s ne… http… https://c… 2024-10-08… \"Image… the-verge\n10 Gizmodo Dea… To P… This air p… http… https://g… 2024-10-06… \"Prime… &lt;NA&gt;     \n# ℹ 90 more rows\n# ℹ 1 more variable: source.name &lt;chr&gt;\n\n\n\n\n3. Reusable Function\n\nqueryNewsAPI &lt;- function(subject, from_date, api_key) {\n  \n  base_url &lt;- \"https://newsapi.org/v2/everything\"\n  \n  # Can only query 30 days past\n  input_date &lt;- as_date(from_date)\n  max_from_date &lt;- Sys.Date() - 30\n  \n  if (input_date &lt; max_from_date) {\n    warning(\"Setting the from_date to the 30 day max\")\n    from_date &lt;- as.character(max_from_date)\n  }\n  \n  params &lt;- list(\n    q = subject,\n    from = from_date,\n    apiKey = api_key\n  )\n  \n  response &lt;- GET(base_url, query = params)\n  \n  if (http_status(response)$category != \"Success\") {\n    stop(\"API Request Failed\")\n  }\n  \n  response_content &lt;- fromJSON(rawToChar(response$content), flatten = TRUE)\n  \n  articles &lt;- pluck(response_content, \"articles\")\n  \n  as_tibble(articles)\n}\n\n\ntech &lt;- queryNewsAPI(\"technology\", \"2024-10-01\", api_key)\ntech\n\n# A tibble: 100 × 9\n   author       title description url   urlToImage publishedAt content source.id\n   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;    \n 1 Gizmodo      Firs… Sending a … http… https://g… 2024-10-11… \"Robor… &lt;NA&gt;     \n 2 Gizmodo      From… Roborock's… http… https://g… 2024-10-02… \"Robor… &lt;NA&gt;     \n 3 Joe Tilleli  Unbe… No need to… http… https://g… 2024-10-07… \"Amazo… &lt;NA&gt;     \n 4 &lt;NA&gt;         Musk… BBC Tech C… http… https://i… 2024-10-12… \"Elon … &lt;NA&gt;     \n 5 Rob Reddick  Form… Since laun… http… https://m… 2024-10-02… \"What … wired    \n 6 Juli Clover  Appl… Apple toda… http… https://i… 2024-10-07… \"Apple… &lt;NA&gt;     \n 7 Verity Burns Nint… Nintendo’s… http… https://m… 2024-10-09… \"Of al… wired    \n 8 Seth Godin   Yes,… I worked w… http… https://s… 2024-10-05… \"I wor… &lt;NA&gt;     \n 9 Abigail Bas… Hond… Honda’s ne… http… https://c… 2024-10-08… \"Image… the-verge\n10 Gizmodo Dea… To P… This air p… http… https://g… 2024-10-06… \"Prime… &lt;NA&gt;     \n# ℹ 90 more rows\n# ℹ 1 more variable: source.name &lt;chr&gt;\n\n\n\nhealth &lt;- queryNewsAPI(\"health\", \"2024-10-01\", api_key)\nhealth\n\n# A tibble: 100 × 9\n   author       title description url   urlToImage publishedAt content source.id\n   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;   &lt;chr&gt;    \n 1 Adrienne So  Oura… Oura’s upd… http… \"\"         2024-10-03… \"In th… wired    \n 2 Adam Kovac   Why … When pater… http… \"https://… 2024-10-10… \"Some … &lt;NA&gt;     \n 3 &lt;NA&gt;         Leba… The World … http… \"https://… 2024-10-05… \"At le… &lt;NA&gt;     \n 4 &lt;NA&gt;         Scot… Health Sec… http… \"https://… 2024-10-01… \"Healt… &lt;NA&gt;     \n 5 &lt;NA&gt;         Jail… The Sunday… http… \"https://… 2024-10-06… \"A dis… &lt;NA&gt;     \n 6 &lt;NA&gt;         Resc… The attack… http… \"https://… 2024-10-11… \"Distr… &lt;NA&gt;     \n 7 Gizmodo Dea… Amaz… This air p… http… \"https://… 2024-10-08… \"The B… &lt;NA&gt;     \n 8 &lt;NA&gt;         Radi… He will st… http… \"https://… 2024-10-06… \"The B… &lt;NA&gt;     \n 9 &lt;NA&gt;         Isra… Dozens wer… http… \"https://… 2024-10-06… \"The H… &lt;NA&gt;     \n10 Gizmodo Dea… To P… This air p… http… \"https://… 2024-10-06… \"Prime… &lt;NA&gt;     \n# ℹ 90 more rows\n# ℹ 1 more variable: source.name &lt;chr&gt;\n\n\n\n\n4. Summarize the source\n\nsource_summary &lt;- table(tech$source.name)\n\nsource_summary\n\n\n       [Removed]  Android Central   Android Police         BBC News \n               3                2                1                5 \nBusiness Insider   Digital Trends         Fox News       Gigaom.com \n               6                1                4                1 \n     Gizmodo.com         Hackaday         Ieee.org        MacRumors \n              44                4                1                2 \n   Pthorpe92.dev       Seths.blog        The Verge             Time \n               1                1               11                1 \n           Wired \n              12 \n\n\n\n\n5. publishedAt column\n\ngetTimeBetweenArticles &lt;- function(article) {\n  article |&gt;\n    mutate(publishedAt = ymd_hms(publishedAt)) |&gt;  \n    arrange(publishedAt) |&gt;  \n    mutate(pub_diff = publishedAt - lag(publishedAt)) \n}\n\n\nmy_tech &lt;- tech |&gt; getTimeBetweenArticles()\n\nmy_tech |&gt; select(publishedAt, pub_diff, everything())\n\n# A tibble: 100 × 10\n   publishedAt         pub_diff   author      title description url   urlToImage\n   &lt;dttm&gt;              &lt;drtn&gt;     &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;     \n 1 2024-10-01 04:32:32    NA secs Kwan Wei K… Mark… \"Zuckerber… http… https://i…\n 2 2024-10-01 09:55:00 19348 secs Jason Barl… Bent… \"The addit… http… https://m…\n 3 2024-10-01 14:00:00 14700 secs Jay Peters  Fort… \"Developer… http… https://c…\n 4 2024-10-01 16:21:11  8471 secs Gizmodo De… Amaz… \"Dive into… http… https://g…\n 5 2024-10-01 17:14:52  3221 secs Lisa Erick… How … \"The owner… http… https://g…\n 6 2024-10-01 18:59:20  6268 secs Jennifer P… Slee… \"The compa… http… https://c…\n 7 2024-10-01 20:26:58  5258 secs Gizmodo De… Gala… \"Samsung i… http… https://g…\n 8 2024-10-02 04:00:36 27218 secs Lauren Fei… JD V… \"What Sen.… http… https://c…\n 9 2024-10-02 05:00:37  3601 secs Heidi Ulri… BBC … \"The BBC M… http… https://h…\n10 2024-10-02 08:00:00 10763 secs Rob Reddick Form… \"Since lau… http… https://m…\n# ℹ 90 more rows\n# ℹ 3 more variables: content &lt;chr&gt;, source.id &lt;chr&gt;, source.name &lt;chr&gt;\n\n\n\nmy_health &lt;- health |&gt; getTimeBetweenArticles()\n\nmy_health |&gt; select(publishedAt, pub_diff, everything())\n\n# A tibble: 100 × 10\n   publishedAt         pub_diff  author       title description url   urlToImage\n   &lt;dttm&gt;              &lt;drtn&gt;    &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;     \n 1 2024-10-01 09:49:49   NA secs &lt;NA&gt;         Scot… \"Health Se… http… https://i…\n 2 2024-10-01 11:30:00 6011 secs Gary Stix    Near… \"Myopia is… http… https://s…\n 3 2024-10-01 11:48:00 1080 secs Tommy Greene Hurr… \"Downpours… http… https://m…\n 4 2024-10-01 12:15:52 1672 secs Gizmodo Dea… Bett… \"Looking t… http… https://g…\n 5 2024-10-01 14:30:26 8074 secs &lt;NA&gt;         Labo… \"Local MP … http… https://i…\n 6 2024-10-01 16:25:06 6880 secs Sarah  Cutl… Offi… \"The offic… http… https://m…\n 7 2024-10-01 18:26:34 7288 secs Sri Muppidi… Excl… \"Roon is r… http… https://i…\n 8 2024-10-01 20:41:49 8115 secs Ed Cara      Inva… \"Scientist… http… https://g…\n 9 2024-10-01 20:59:17 1048 secs Mary Kekatos Supp… \"Supply ch… http… https://i…\n10 2024-10-01 21:02:39  202 secs Juli Clover  Appl… \"Apple wil… http… https://i…\n# ℹ 90 more rows\n# ℹ 3 more variables: content &lt;chr&gt;, source.id &lt;chr&gt;, source.name &lt;chr&gt;\n\n\n\n\n6. Subset and Statistics\n\ngetPublishedStats &lt;- function(article) {\n  subset &lt;- article |&gt;\n    select(publishedAt, pub_diff)\n  \n  summary_stats &lt;- map(subset, \\(x) {\n    c(mean = mean(x, na.rm = TRUE),\n      sd = sd(x, na.rm = TRUE),\n      median = median(x, na.rm = TRUE))\n  })\n  \n  summary_stats\n}\n\n\nmy_tech |&gt; getPublishedStats()\n\n$publishedAt\n                     mean                        sd                    median \n\"2024-10-07 04:06:39 UTC\" \"1970-01-04 12:04:35 UTC\" \"2024-10-07 15:25:43 UTC\" \n\n$pub_diff\nTime differences in secs\n    mean       sd   median \n11040.77 12828.72  4885.00 \n\n\n\nmy_health |&gt; getPublishedStats()\n\n$publishedAt\n                     mean                        sd                    median \n\"2024-10-07 00:20:56 UTC\" \"1970-01-04 12:13:14 UTC\" \"2024-10-07 11:16:05 UTC\" \n\n$pub_diff\nTime differences in secs\n    mean       sd   median \n10951.78 13030.60  6384.00"
  }
]